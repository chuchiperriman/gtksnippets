<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libgtksnippets-GtkSnippet">
<refmeta>
<refentrytitle role="top_of_page">GtkSnippet</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGTKSNIPPETS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkSnippet</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



            <link linkend="GtkSnippetPrivate">GtkSnippetPrivate</link>;
            <link linkend="GtkSnippet">GtkSnippet</link>;
<link linkend="GtkSnippet">GtkSnippet</link>* <link linkend="gtk-snippet-new">gtk_snippet_new</link>                 (const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *language,
                                             const <link linkend="gchar">gchar</link> *tag,
                                             const <link linkend="gchar">gchar</link> *description,
                                             const <link linkend="gchar">gchar</link> *text);
const <link linkend="gchar">gchar</link>* <link linkend="gtk-snippet-get-language">gtk_snippet_get_language</link>       (<link linkend="GtkSnippet">GtkSnippet</link> *snippet);
const <link linkend="gchar">gchar</link>* <link linkend="gtk-snippet-get-name">gtk_snippet_get_name</link>           (<link linkend="GtkSnippet">GtkSnippet</link> *snippet);
const <link linkend="gchar">gchar</link>* <link linkend="gtk-snippet-get-tag">gtk_snippet_get_tag</link>            (<link linkend="GtkSnippet">GtkSnippet</link> *snippet);
const <link linkend="gchar">gchar</link>* <link linkend="gtk-snippet-get-text">gtk_snippet_get_text</link>           (<link linkend="GtkSnippet">GtkSnippet</link> *snippet);

</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GtkSnippetPrivate" role="struct"/>GtkSnippetPrivate</title>
<indexterm><primary>GtkSnippetPrivate</primary></indexterm><programlisting>typedef struct _GtkSnippetPrivate GtkSnippetPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GtkSnippet" role="struct"/>GtkSnippet</title>
<indexterm><primary>GtkSnippet</primary></indexterm><programlisting>typedef struct {
	GObject parent;
	GtkSnippetPrivate *priv;
} GtkSnippet;
</programlisting>
<para>
Basic Snippet Structure. Not use the properties directly,
instead use getter and setter.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><link linkend="GObject">GObject</link>&nbsp;<structfield>parent</structfield>;</term>
<listitem><simpara> GObject Parent
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="GtkSnippetPrivate">GtkSnippetPrivate</link>&nbsp;*<structfield>priv</structfield>;</term>
<listitem><simpara> Private data
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-snippet-new" role="function"/>gtk_snippet_new ()</title>
<indexterm><primary>gtk_snippet_new</primary></indexterm><programlisting><link linkend="GtkSnippet">GtkSnippet</link>* gtk_snippet_new                 (const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *language,
                                             const <link linkend="gchar">gchar</link> *tag,
                                             const <link linkend="gchar">gchar</link> *description,
                                             const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
Create new GtkSnippet with all the data. When call this 
function, all arguments are duplicated in the snippet memory</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>language</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tag</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>description</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-snippet-get-language" role="function"/>gtk_snippet_get_language ()</title>
<indexterm><primary>gtk_snippet_get_language</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>* gtk_snippet_get_language       (<link linkend="GtkSnippet">GtkSnippet</link> *snippet);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>snippet</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Snippet language internal variable. Not free!!
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-snippet-get-name" role="function"/>gtk_snippet_get_name ()</title>
<indexterm><primary>gtk_snippet_get_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>* gtk_snippet_get_name           (<link linkend="GtkSnippet">GtkSnippet</link> *snippet);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>snippet</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Snippet name internal variable. Not free!!
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-snippet-get-tag" role="function"/>gtk_snippet_get_tag ()</title>
<indexterm><primary>gtk_snippet_get_tag</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>* gtk_snippet_get_tag            (<link linkend="GtkSnippet">GtkSnippet</link> *snippet);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>snippet</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Snippet tag internal variable. Not free!!
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-snippet-get-text" role="function"/>gtk_snippet_get_text ()</title>
<indexterm><primary>gtk_snippet_get_text</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>* gtk_snippet_get_text           (<link linkend="GtkSnippet">GtkSnippet</link> *snippet);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>snippet</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Snippet text internal variable. Not free!!
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
