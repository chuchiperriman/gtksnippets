/*
 * This file is a basic example of how a .gob file would be constructed,
 * how to add data members, properties and methods
 * Generate with 
 * gob2 --no-lines --no-private-header --no-self-alias gtk-text-completion-data.gob
 */
requires 2.0.0

%{
#include <gtk/gtk.h>
#include "gtk-text-completion-data.h"
%}

class Gtk:Text:Completion:Data from G:Object {
	
	private const gchar *name = {NULL}
		destroy {
			g_free(name);
		};
	private Gdk:Pixbuf* icon = NULL;
	private gpointer user_data = NULL;
	
	public const gchar*
	get_name(self)
	{
		return self->_priv->name;
	}
	
	public Gdk:Pixbuf*
	get_icon(self)
	{
		return self->_priv->icon;
	}
	
	public gpointer
	get_user_data(self)
	{
		return self->_priv->user_data;
	}
	
	
	/**
	* new_with_data:
	* @name: We copy the data
	* @icon: We ref the icon
	* @user_data: We don't make anything
	*
	* Create a new completion data object
	*
	* Returns: The new oject
	**/
	public Gtk:Text:Completion:Data *
	new_with_data (const gchar* name, Gdk:Pixbuf *icon, gpointer user_data)
	{
		GtkTextCompletionData *data = GTK_TEXT_COMPLETION_DATA(GET_NEW);
		
		data->_priv->name = g_strdup(name);
		if (icon!=NULL)
			data->_priv->icon = g_object_ref(icon);
		data->_priv->user_data = user_data;
		return data;
	}
	
	public void
	free(Gtk:Text:Completion:Data *data)
	{
		if (data->_priv->name != NULL)
		{
			g_free(data->_priv->name);
			data->_priv->name = NULL;
		}
		if (data->_priv->icon != NULL)
		{
			g_object_unref(data->_priv->icon);
			data->_priv->icon = NULL;
		}
		g_object_unref(data);
	}
}


