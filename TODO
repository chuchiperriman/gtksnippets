GtkTextCompletion:
	.- Connect to GtktextView destroy signal and hide and destroy the popup if visible
	.- Add Icon to snippets provider data.
	.- Configuration support for Snippets provider:
		.- Configure if filter snippets by language or not.
	.- TestProvvider:
		.- Configure if you want autocompletion or only user request completion.
	
GtcGeditPlugin:
	.- Configure the active providers. Show a list of providers and check if you want use it.
	
GtkTextView:
	.- [OK] When we get the last word, if is blank or \n then return the previous word in the line or the
		previous word in the previous line
	.- [OK] If the word has a number, return only the number (chuchi6 return 6 an may return chuchi6)

Popup List:
	.- HighLight the snippet content in the popup
	.- [OK] Study how response when select a snippet. How notify to add the snippet text to the editor
		.- [OK] When select a snippet launch the "snippet-selected" signal
		.- [OK] When exit the snippet dialog without select any snippet, we launch "snippet-ignored" signal
	.- [OK] Add a text view at right of the snippets tree list with the content of the selected snippet	
	.- [OK] Hide the popup when press ESC

Loader:

	.- Function save for save the actual snippets on disk.
	.- Signal snippet-added when someone add a snippet
	.- Signal snippet-removes when someone remove a snippet
	.- [OK] Make the loader, now it return some test snippets. The may load snippets from the xml
	.- [OK] The hashtable key now is a counter. Snippets hastable key: change. Now the id is the
		key but the id can be equal for various snippets
	.- [OK] When load the XML, get all languages from GtkSourceLanguagesManager and search on disks for files with 
		the name of each language name (example: language name C++, file name with the snippets C++.xml ). 
			.- [OK] Get language from GtkSourceLanguage, not from language tag in the xml.
	.- [OK] Organize snippets in separated lists gruped by language because is more easy to load, to save and 
		to build the TreeModels.
	.- [OK] function like gtk-snippets-loader-get-snippets-by-language(gchar* language)
			than only return a list of snippet for this language
	.- [OK] Function add-snippet for add new snippet
	.- [OK] Function remove-snippet for delete a snippet. It Remove a snippet from the list and unref it.
	.- [OK] Change the default load. Loads snippets from user home (/home/chuchi/.gnome2/libgtksnippets).
		
Snippets Management UI:

	.- Set default action to Accept button un new snippet dialog 
	.- Now we save all the documents when close the dialog. Save only the changed snippets. We must save all user actions like: removed snippet1, added snippet2, edited snippet3 etc and then we can save only the languages changed.
	.- [OK] Set not editable the tag entry and the content source when not snippet selected (if not, crash)
	.- [OK] Insert, remove and edit snippets in the dialog.
	.- [OK] Remove: Remove from loader and remove from tree view
	.- [OK] Add Snippet:
			.- [OK] Add into the Tree View,
			.- [OK] Add the snippet into the loader
	.- [OK] Edit: Edit de snippet tag and content
	.- [OK] HighLight The snippets content 
	.- [OK] Set focus on the entry when click on new snippet

Manager:

	.- Make keybinding (control+space) configurable.
	.- [OK] When insert the snippet text in the gtktextview, we may remove the previous word. We write "if"
		press control+space, we select the snippet then the "if" word that we wrote may be deleted.
	.- [OK] Implement remove_support: When call remove support, we may disconnect any signal in this editor.
	.- [OK] focus fails when we add a snippet in an empty language.
	.- [OK] If we add a new snippet and remove it without close the management dialog,
	fails (because we have not saved the snippet on the loader and when we remove the
	snippet from the loader, then crash).
	
Other:

	.- Put all asserts in the functions
	.- Support Global snippets. Snippets that are showed with every languages.
	.- [OK] Generate gtk-doc	
	.- [OK] Upload all the API to the web
	.- [OK] Update the web site in english
	.- [OK] Write examples in the web
	.- [OK] Make a release in sourceforge
	.- [OK] Announce the project in gnome-devtools list
	.- [NO] Change language assignment with mime-type in all classes.
	
